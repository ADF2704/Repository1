{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ECDSalespp"
		},
		"Blob1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blob1'"
		},
		"SqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Blob1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blob1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales.csv",
						"container": "input1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Receipt Number",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Price $/each",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "Payment Type (cash / credit)",
						"type": "String"
					},
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Store",
						"type": "String"
					},
					{
						"name": "Cost of goods",
						"type": "String"
					},
					{
						"name": "Shipment date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Receipt_Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Time",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Product",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price_each",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Payment_Type_cash_credit",
						"type": "nvarchar"
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Store",
						"type": "nvarchar"
					},
					{
						"name": "Cost_of_goods",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Shipment_date",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob to SQL database",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Sales",
								"type": "DatasetReference"
							},
							"name": "Sales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SalesSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "Blob1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {Receipt Number} as string,",
						"          Date as date,",
						"          Time as timestamp,",
						"          Product as string,",
						"          Quantity as string,",
						"          {Price $/each} as string,",
						"          Total as string,",
						"          {Payment Type (cash / credit)} as string,",
						"          Customer as string,",
						"          Store as string,",
						"          {Cost of goods} as string,",
						"          {Shipment date} as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Sales",
						"Sales sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Receipt_Number as integer,",
						"          Date as timestamp,",
						"          Time as timestamp,",
						"          Product as string,",
						"          Quantity as integer,",
						"          Price_each as integer,",
						"          Total as integer,",
						"          Payment_Type_cash_credit as string,",
						"          Customer as string,",
						"          Store as string,",
						"          Cost_of_goods as integer,",
						"          Shipment_date as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Receipt_Number = {Receipt Number},",
						"          Date,",
						"          Time,",
						"          Product,",
						"          Quantity,",
						"          Price_each = {Price $/each},",
						"          Total,",
						"          Payment_Type_cash_credit = {Payment Type (cash / credit)},",
						"          Customer,",
						"          Store,",
						"          Cost_of_goods = {Cost of goods},",
						"          Shipment_date = {Shipment date}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sales')]",
				"[concat(variables('factoryId'), '/datasets/SalesSqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/Blob1')]"
			]
		}
	]
}